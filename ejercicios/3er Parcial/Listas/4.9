Dada una lista circular de 8 elementos que contienen, cada uno, un valor numérico entero para encriptación, encriptar un texto ingresado por teclado (arreglo de caracteres de 255 elementos como máximo). El texto encriptado debe almacenarse en una lista de salida simplemente encadenada y, por último mostrar por pantalla.

ENCRIPTAR
------------------------------------
| Multiplicador N(5) | Prox Puntero|
------------------------------------

La encriptación se realiza según las siguientes pautas:

-Dada la posición del carácter dentro del texto, buscar en la lista circular de encriptación el multiplicador correspondiente, de acuerdo a su posición lógica en la lista. Por ejemplo: como solo hay 8 multiplicadores, si se ingresa un arreglo de 10 caracteres, para encriptar los ultimos dos se utilizarían los multiplicadores 1 y 2.
-Se usa la función ASCII(Carácter) para convertir cada carácter del arreglo en un entero.
-Luego se lo multiplican los valores obtenidos en los 2 pasos anteriores.
-Por último se descompone el resultado obtenido en 3 en cada uno de sus dígitos, se los suma y se guarda en la lista de salida. Ej: si en el paso 3 me dio 123, 1+2+3=6.


Accion 4.9 (a: arreglo de [1..255] de entero, prim2: puntero a nodo2) es
//simple, de salida
nodo = registro
    dato:
    prox: puntero a nodo
fin registro
p, prim, p2: puntero a nodo

//circular
nodo2 = reg
    mult: N(5)
    prox: puntero a nodo2
fin registro
q: puntero a nodo2
i: entero

proceso
    //no sabemos la cantidad de elementos 
    i:=1 
    q:=prim2
    mientras (a[i]<>nil) hacer
        nuevo(p)
        *p.dato:= ASCII(a[i])*(*q.mult)
        *p.dato:=(*p.dato mod 10)+((*p.dato div 10)mod 10)+(((*p.dato div 10)mod 10))div 10)
        si prim=nil entonces // no tengo ningun elemento en mi lista?
            prim:=p
            *prim.prox:=nil
        si no
            si *prim.prox=nil entonces // es el unico?   
                *p.prox:=nil
                *prim.prox:=p
            si no
                *p.prox:=*prim.prox
                *prim.prox:=p
            fin si
        fin si
        i:=i+1
        q:=*q.prox
    fin mientras
    p:=prim
    mientras p<>nil hacer
        esc(*p.dato)
        p:=*p.prox
    fin mientras

fin accion
                
----------------
    ## con sun segundo puntero
    mientras (a[i]<>nil) hacer
        nuevo(p2)
        *p2.dato:= ASCII(a[i])*(*q.mult)
        *p2.dato:=(*p2.dato mod 10)+((*p2.dato div 10)mod 10)+(((*p2.dato div 10)mod 10))div 10)
        *p2.prox:=nil
        si prim=nil entonces // no tengo ningun elemento en mi lista?
            prim:=p2
            p:=p2
        si no
            *p.prox:p2
            p:=*p.prox
        fin si
        i:=i+1
        q:=*q.prox
    fin mientras
    p:=prim
    mientras p<>nil hacer
        esc(*p.dato)
        p:=*p.prox
    fin mientras






